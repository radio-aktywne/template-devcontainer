name: Image

# Put 'on' in quotes to avoid YAML parsing error
"on":
  # Enable manual triggering
  workflow_dispatch: {}
  # Run on commits to main branch
  push:
    branches:
      - main
    # Run only on changes to relevant files
    paths:
      - .github/workflows/image.yaml
      - src/**
      - flake.lock
      - "*.nix"
      - package-lock.json
      - package.json
      - Taskfile.dist.yaml
  # Run also on pull requests to main branch
  pull_request:
    branches:
      - main
    # Run only on changes to relevant files
    paths:
      - .github/workflows/image.yaml
      - src/**
      - flake.lock
      - "*.nix"
      - package-lock.json
      - package.json
      - Taskfile.dist.yaml

jobs:
  image:
    name: Build Docker image
    # Pin version of Ubuntu to avoid breaking changes
    runs-on: ubuntu-22.04
    # Use reasonable timeout to avoid stuck workflows
    timeout-minutes: 30
    env:
      NIX_CACHE_DIR: /home/runner/.nixcache/
    permissions:
      # Needed to checkout code
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
      - name: Setup Nix cache
        uses: actions/cache@v3.3.2
        id: cache-nix
        with:
          path: ${{ env.NIX_CACHE_DIR }}
          key: image-nix
      - name: Install Nix
        uses: cachix/install-nix-action@v24
        with:
          github_access_token: ${{ github.token }}
          install_url: https://releases.nixos.org/nix/nix-2.19.2/install
      # See: https://github.com/cachix/install-nix-action/issues/56
      - name: Import Nix store cache
        if: steps.cache-nix.outputs.cache-hit == 'true'
        run: >
          nix-store
          --import
          < ${{ env.NIX_CACHE_DIR }}/archive.nar
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      - name: Build Docker image
        run: >
          nix
          develop
          .#build
          --command
          --
          task
          build
          --
          --cache-from
          'type=gha,scope=${{ github.workflow }}'
          --cache-to
          'type=gha,mode=max,scope=${{ github.workflow }}'
          --output
          type=cacheonly
      - name: Export Nix store cache
        if: "!cancelled()"
        run: >
          mkdir
          -p
          ${{ env.NIX_CACHE_DIR }}
          &&
          nix-store
          --export $(find /nix/store/ -maxdepth 1 -name '*-*')
          > ${{ env.NIX_CACHE_DIR }}/archive.nar
